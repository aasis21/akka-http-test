# Copyright 2016 Dennis Vriend
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

akka {

  stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = on
  loglevel = DEBUG
  log-dead-letters = on
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    debug {
      receive                      = off // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive                  = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle                    = off // log all actor lifecycle events of all actors
      fsm                          = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream                 = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }

  stream {
    materializer {
      debug-logging               = on  // Enable additional troubleshooting logging at DEBUG log level
    }
  }

  http {
    host-connection-pool {
      max-connections = 4
      max-retries = 20
    }
  }
}

http {
  interface = "0.0.0.0"
  port = 9000
}

webservices {

  eetnu {
    host = "api.eet.nu"
    port = 443
    tls = true
  }

  iens {
    host = "www.iens.nl"
    port = 443
    tls = true
    consumerKey = "YOUR_KEY_HERE"
    consumerSecret = "YOUR_SECRET_HERE"
  }

  postcode {
    host = "api.postcode.nl"
    port = 443
    tls = true
    username = "YOUR_USERNAME_HERE"
    password = "YOUR_PASSWORD_HERE"
  }

  weather {
    host = "api.openweathermap.org"
    port = 80
    tls = false
  }
}

play.akka.actor-system = "PlayTestSystem"

play.crypto.secret = "4284168"

//play.modules.enabled += "com.github.dnvriend.Module"

# Default database configuration
slick.dbs.default.driver="slick.driver.H2Driver$"
slick.dbs.default.db.driver="org.h2.Driver"
slick.dbs.default.db.url="jdbc:h2:mem:play"
slick.dbs.default.db.connectionTimeout=5000
slick.dbs.default.db.validationTimeout=5000
slick.dbs.default.db.initializationFailFast=false
slick.dbs.default.db.numThreads=20
slick.dbs.default.db.maxConnections=40
slick.dbs.default.db.minConnections=1

cinnamon.akka {
  actors {
    "/user/*" {
      report-by = class
    }
    //"/system/*" {
    //  report-by = class
    //}
  }
}

cinnamon.trace {
  thresholds {
    "foo-request" = "500 millis"
    "bar-response" = "500 millis"
  }
}